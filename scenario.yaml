appInstallations:
  anthropic:
    appName: Anthropic
    appVersion: 0.1.0
    id: 019a0c38-703e-7ce8-b19d-ecd7fe4f90e1
blocks:
  - name: Get weather for city
    description: Fetches a weather for a given city
    type:
      appBlock:
        block: toolDefinition
        appInstallation: anthropic
        schema: '{"order":1,"name":"Tool definition","category":"Definition","description":"Define a custom tool that can be called by the Tool Calling block.","config":{"schema":{"order":0,"name":"Schema","description":"JSON schema defining the parameters this tool accepts","type":{"additionalProperties":true,"properties":{"properties":{"additionalProperties":true,"type":"object"},"required":{"items":{"type":"string"},"type":"array"},"type":{"type":"string"}},"type":"object"},"fixed":false,"required":true,"default":{"properties":{"example":{"description":"An example input for this tool","type":"string"}},"required":["example"],"type":"object"},"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnInternalMessage":true,"inputs":{"processResult":{"order":0,"name":"Process result","description":"Send the result back to the tool caller","config":{"result":{"order":0,"name":"Result","description":"The final result to return","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"onCall":{"order":0,"name":"On call","description":"Emitted when the tool is called by the caller","default":true,"possiblePrimaryParents":["processResult"],"type":{"properties":{"parameters":{"additionalProperties":true,"description":"Tool parameters","type":"object"}},"required":["parameters"],"type":"object"}}},"signals":{},"hasOnSync":true,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [965, 272]
    config:
      schema: !expr |-
        {
          type: "object",
          properties: {
            city: {
              type: "string"
            }
          },
          required: ["city"]
        }
    inputs:
      processResult:
        links:
          - block: Transform
            output: default
        config:
          result: !expr outputs.transform
  - name: Transform
    type:
      coreBlock: transform
    position: [935, 781]
    inputs:
      default:
        links:
          - block: Sleep
            output: default
        config: {}
  - name: Sleep
    type:
      coreBlock: sleep
    position: [965, 553]
    inputs:
      default:
        links:
          - block: Get weather for city
            output: onCall
        config:
          sleep: 2
  - name: Get stock price
    description: Fetches stock price from API
    type:
      appBlock:
        block: toolDefinition
        appInstallation: anthropic
        schema: '{"order":1,"name":"Tool definition","category":"Definition","description":"Define a custom tool that can be called by the Tool Calling block.","config":{"schema":{"order":0,"name":"Schema","description":"JSON schema defining the parameters this tool accepts","type":{"additionalProperties":true,"properties":{"properties":{"additionalProperties":true,"type":"object"},"required":{"items":{"type":"string"},"type":"array"},"type":{"type":"string"}},"type":"object"},"fixed":false,"required":true,"default":{"properties":{"example":{"description":"An example input for this tool","type":"string"}},"required":["example"],"type":"object"},"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnInternalMessage":true,"inputs":{"processResult":{"order":0,"name":"Process result","description":"Send the result back to the tool caller","config":{"result":{"order":0,"name":"Result","description":"The final result to return","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"onCall":{"order":0,"name":"On call","description":"Emitted when the tool is called by the caller","default":true,"possiblePrimaryParents":["processResult"],"type":{"properties":{"parameters":{"additionalProperties":true,"description":"Tool parameters","type":"object"}},"required":["parameters"],"type":"object"}}},"signals":{},"hasOnSync":true,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [483, 272]
    config:
      schema:
        properties:
          ticker:
            description: The stock ticker symbol, e.g. AAPL for Apple Inc.
            type: string
        required:
          - ticker
        type: object
    inputs:
      processResult:
        links:
          - block: Transform (1)
            output: default
        config:
          result: !expr outputs.transform
  - name: Transform (1)
    type:
      coreBlock: transform
    position: [446, 781]
    inputs:
      default:
        links:
          - block: Sleep (1)
            output: default
        config: {}
  - name: OpenTofu MCP server
    type:
      appBlock:
        block: remoteMcpServer
        appInstallation: anthropic
        schema: '{"order":2,"name":"Remote MCP server","category":"Definition","description":"Configure an MCP server to be utilized by Claude when generating messages.","config":{"allowedTools":{"order":2,"name":"Allowed tools","description":"The tools that are allowed to be called. If not provided, all tools are allowed. Set to empty array to allow no tools.","type":{"items":{"type":"string"},"type":"array"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"authorizationToken":{"order":1,"name":"Authorization token","description":"OAuth authorization token if required by the MCP server.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"url":{"order":0,"name":"URL","description":"The URL of the MCP server. Must start with https://","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnInternalMessage":false,"inputs":{},"outputs":{},"signals":{},"hasOnSync":true,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1703, 272]
    config:
      url: https://mcp.opentofu.org/sse
  - name: Tool call demo
    type:
      appBlock:
        block: generateMessage
        appInstallation: anthropic
        schema: '{"order":0,"name":"Generate message","category":"Core","description":"Generates a message based on provided input and parameters.","config":{},"hasOnInternalMessage":true,"inputs":{"default":{"order":0,"config":{"force":{"order":10,"name":"Force","description":"Force the model to call a tool. Provide a name to call a specific tool or `true` to always call any tool.","type":{"anyOf":[{"description":"The name of the tool to call.","type":"string"},{"description":"Always call any tool.","type":"boolean"}]},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxRetries":{"order":5,"name":"Max retries","description":"The number of times to retry the call if it fails to generate a valid object. Works only if schema is provided.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxTokens":{"order":3,"name":"Max tokens","description":"The maximum number of tokens to generate before stopping. Note that the models may stop before reaching this maximum. This parameter only specifies the absolute maximum number of tokens to generate.","type":{"type":"number"},"fixed":false,"required":false,"default":1024,"hasValidator":false,"fieldKey":"","sensitive":false},"mcpServers":{"order":9,"name":"Remote MCP servers","description":"Array of remote MCP servers to use","type":{"items":{"properties":{"allowedTools":{"description":"Allowed tools for the MCP server","type":"array"},"authorizationToken":{"description":"Authorization token for the MCP server","type":"string"},"name":{"description":"Name of the MCP server","type":"string"},"type":{"description":"Type of the MCP server","enum":["url"],"type":"string"},"url":{"description":"URL of the MCP server","type":"string"}},"required":["name","url","type"],"type":"object"},"type":"array"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"model":{"order":0,"name":"Model","description":"The model that will complete your prompt.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"prompt":{"order":1,"name":"Prompt","description":"The input to the model.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"schema":{"order":4,"name":"Schema","description":"The JSON schema to generate the object from.","type":{"additionalProperties":true,"type":"object"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"systemPrompt":{"order":2,"name":"System prompt","description":"A system prompt is a way of providing context and instructions to Claude, such as specifying a particular goal or role.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"temperature":{"order":11,"name":"Temperature","description":"Amount of randomness injected into the response. Defaults to `1.0`. Ranges from `0.0` to `1.0`. Use temperature closer to `0.0` for analytical / multiple choice, and closer to `1.0` for creative and generative tasks. Note that even with temperature of `0.0`, the results will not be fully deterministic.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinking":{"order":6,"name":"Thinking","description":"Whether to enable Claude''s extended thinking. This will make the model think more deeply and generate more detailed responses. This will also increase the cost of the request.","type":{"type":"boolean"},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinkingBudget":{"order":7,"name":"Thinking budget","description":"Determines how many tokens Claude can use for its internal reasoning process. Must be ≥1024 and less than `max_tokens`.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"toolDefinitions":{"order":8,"name":"Tools","description":"Array of tool blocks to use","type":{"items":{"properties":{"blockId":{"description":"ID of the tool definition block","type":"string"},"description":{"description":"Description of the tool","type":"string"},"name":{"description":"Name of the tool","type":"string"},"schema":{"description":"Schema of the tool","type":"object"}},"required":["name","description","schema"],"type":"object"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"result":{"order":0,"name":"Result","description":"The generated message","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"object":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"description":"The generated object if schema is provided"},"text":{"description":"The generated message","type":"string"},"usage":{"properties":{"inputTokens":{"type":"number"},"outputTokens":{"type":"number"}},"type":"object"}},"required":["usage"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":true}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1360, 272]
    inputs:
      default:
        config:
          force: false
          maxTokens: 10000
          model: claude-sonnet-4-20250514
          prompt: check weather for gdansk
          thinking: false
          thinkingBudget: 1024
          toolDefinitions: !expr |-
            [
              ref("signal.getStockPrice.definition"),
              ref("signal.getWeatherForCity.definition")
            ]
  - name: MCP server demo
    type:
      appBlock:
        block: generateMessage
        appInstallation: anthropic
        schema: '{"order":0,"name":"Generate message","category":"Core","description":"Generates a message based on provided input and parameters.","config":{},"hasOnInternalMessage":true,"inputs":{"default":{"order":0,"config":{"force":{"order":10,"name":"Force","description":"Force the model to call a tool. Provide a name to call a specific tool or `true` to always call any tool.","type":{"anyOf":[{"description":"The name of the tool to call.","type":"string"},{"description":"Always call any tool.","type":"boolean"}]},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxRetries":{"order":5,"name":"Max retries","description":"The number of times to retry the call if it fails to generate a valid object. Works only if schema is provided.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxTokens":{"order":3,"name":"Max tokens","description":"The maximum number of tokens to generate before stopping. Note that the models may stop before reaching this maximum. This parameter only specifies the absolute maximum number of tokens to generate.","type":{"type":"number"},"fixed":false,"required":false,"default":1024,"hasValidator":false,"fieldKey":"","sensitive":false},"mcpServers":{"order":9,"name":"Remote MCP servers","description":"Array of remote MCP servers to use","type":{"items":{"properties":{"allowedTools":{"description":"Allowed tools for the MCP server","type":"array"},"authorizationToken":{"description":"Authorization token for the MCP server","type":"string"},"name":{"description":"Name of the MCP server","type":"string"},"type":{"description":"Type of the MCP server","enum":["url"],"type":"string"},"url":{"description":"URL of the MCP server","type":"string"}},"required":["name","url","type"],"type":"object"},"type":"array"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"model":{"order":0,"name":"Model","description":"The model that will complete your prompt.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"prompt":{"order":1,"name":"Prompt","description":"The input to the model.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"schema":{"order":4,"name":"Schema","description":"The JSON schema to generate the object from.","type":{"additionalProperties":true,"type":"object"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"systemPrompt":{"order":2,"name":"System prompt","description":"A system prompt is a way of providing context and instructions to Claude, such as specifying a particular goal or role.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"temperature":{"order":11,"name":"Temperature","description":"Amount of randomness injected into the response. Defaults to `1.0`. Ranges from `0.0` to `1.0`. Use temperature closer to `0.0` for analytical / multiple choice, and closer to `1.0` for creative and generative tasks. Note that even with temperature of `0.0`, the results will not be fully deterministic.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinking":{"order":6,"name":"Thinking","description":"Whether to enable Claude''s extended thinking. This will make the model think more deeply and generate more detailed responses. This will also increase the cost of the request.","type":{"type":"boolean"},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinkingBudget":{"order":7,"name":"Thinking budget","description":"Determines how many tokens Claude can use for its internal reasoning process. Must be ≥1024 and less than `max_tokens`.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"toolDefinitions":{"order":8,"name":"Tools","description":"Array of tool blocks to use","type":{"items":{"properties":{"blockId":{"description":"ID of the tool definition block","type":"string"},"description":{"description":"Description of the tool","type":"string"},"name":{"description":"Name of the tool","type":"string"},"schema":{"description":"Schema of the tool","type":"object"}},"required":["name","description","schema"],"type":"object"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"result":{"order":0,"name":"Result","description":"The generated message","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"object":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"description":"The generated object if schema is provided"},"text":{"description":"The generated message","type":"string"},"usage":{"properties":{"inputTokens":{"type":"number"},"outputTokens":{"type":"number"}},"type":"object"}},"required":["usage"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":true}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1703, 425]
    inputs:
      default:
        config:
          force: false
          maxTokens: 10000
          mcpServers: !expr |-
            [ref("signal.opentofuMcpServer.definition")]
          model: claude-sonnet-4-20250514
          prompt: find more about blueprint resource in spacelift provider
          thinking: false
          thinkingBudget: 1024
  - name: Tool call + MCP server
    type:
      appBlock:
        block: generateMessage
        appInstallation: anthropic
        schema: '{"order":0,"name":"Generate message","category":"Core","description":"Generates a message based on provided input and parameters.","config":{},"hasOnInternalMessage":true,"inputs":{"default":{"order":0,"config":{"force":{"order":10,"name":"Force","description":"Force the model to call a tool. Provide a name to call a specific tool or `true` to always call any tool.","type":{"anyOf":[{"description":"The name of the tool to call.","type":"string"},{"description":"Always call any tool.","type":"boolean"}]},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxRetries":{"order":5,"name":"Max retries","description":"The number of times to retry the call if it fails to generate a valid object. Works only if schema is provided.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxTokens":{"order":3,"name":"Max tokens","description":"The maximum number of tokens to generate before stopping. Note that the models may stop before reaching this maximum. This parameter only specifies the absolute maximum number of tokens to generate.","type":{"type":"number"},"fixed":false,"required":false,"default":1024,"hasValidator":false,"fieldKey":"","sensitive":false},"mcpServers":{"order":9,"name":"Remote MCP servers","description":"Array of remote MCP servers to use","type":{"items":{"properties":{"allowedTools":{"description":"Allowed tools for the MCP server","type":"array"},"authorizationToken":{"description":"Authorization token for the MCP server","type":"string"},"name":{"description":"Name of the MCP server","type":"string"},"type":{"description":"Type of the MCP server","enum":["url"],"type":"string"},"url":{"description":"URL of the MCP server","type":"string"}},"required":["name","url","type"],"type":"object"},"type":"array"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"model":{"order":0,"name":"Model","description":"The model that will complete your prompt.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"prompt":{"order":1,"name":"Prompt","description":"The input to the model.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"schema":{"order":4,"name":"Schema","description":"The JSON schema to generate the object from.","type":{"additionalProperties":true,"type":"object"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"systemPrompt":{"order":2,"name":"System prompt","description":"A system prompt is a way of providing context and instructions to Claude, such as specifying a particular goal or role.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"temperature":{"order":11,"name":"Temperature","description":"Amount of randomness injected into the response. Defaults to `1.0`. Ranges from `0.0` to `1.0`. Use temperature closer to `0.0` for analytical / multiple choice, and closer to `1.0` for creative and generative tasks. Note that even with temperature of `0.0`, the results will not be fully deterministic.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinking":{"order":6,"name":"Thinking","description":"Whether to enable Claude''s extended thinking. This will make the model think more deeply and generate more detailed responses. This will also increase the cost of the request.","type":{"type":"boolean"},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinkingBudget":{"order":7,"name":"Thinking budget","description":"Determines how many tokens Claude can use for its internal reasoning process. Must be ≥1024 and less than `max_tokens`.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"toolDefinitions":{"order":8,"name":"Tools","description":"Array of tool blocks to use","type":{"items":{"properties":{"blockId":{"description":"ID of the tool definition block","type":"string"},"description":{"description":"Description of the tool","type":"string"},"name":{"description":"Name of the tool","type":"string"},"schema":{"description":"Schema of the tool","type":"object"}},"required":["name","description","schema"],"type":"object"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"result":{"order":0,"name":"Result","description":"The generated message","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"object":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"description":"The generated object if schema is provided"},"text":{"description":"The generated message","type":"string"},"usage":{"properties":{"inputTokens":{"type":"number"},"outputTokens":{"type":"number"}},"type":"object"}},"required":["usage"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":true}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1703, 532]
    inputs:
      default:
        config:
          force: false
          maxTokens: 10000
          mcpServers: !expr |-
            [ref("signal.opentofuMcpServer.definition")]
          model: claude-sonnet-4-20250514
          prompt: check weather for gdansk and find more about blueprint resource in spacelift provider
          thinking: false
          thinkingBudget: 1024
          toolDefinitions: !expr |-
            [
              ref("signal.getStockPrice.definition"),
              ref("signal.getWeatherForCity.definition")
            ]
  - name: Parallel tool calls demo
    type:
      appBlock:
        block: generateMessage
        appInstallation: anthropic
        schema: '{"order":0,"name":"Generate message","category":"Core","description":"Generates a message based on provided input and parameters.","config":{},"hasOnInternalMessage":true,"inputs":{"default":{"order":0,"config":{"force":{"order":10,"name":"Force","description":"Force the model to call a tool. Provide a name to call a specific tool or `true` to always call any tool.","type":{"anyOf":[{"description":"The name of the tool to call.","type":"string"},{"description":"Always call any tool.","type":"boolean"}]},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxRetries":{"order":5,"name":"Max retries","description":"The number of times to retry the call if it fails to generate a valid object. Works only if schema is provided.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxTokens":{"order":3,"name":"Max tokens","description":"The maximum number of tokens to generate before stopping. Note that the models may stop before reaching this maximum. This parameter only specifies the absolute maximum number of tokens to generate.","type":{"type":"number"},"fixed":false,"required":false,"default":1024,"hasValidator":false,"fieldKey":"","sensitive":false},"mcpServers":{"order":9,"name":"Remote MCP servers","description":"Array of remote MCP servers to use","type":{"items":{"properties":{"allowedTools":{"description":"Allowed tools for the MCP server","type":"array"},"authorizationToken":{"description":"Authorization token for the MCP server","type":"string"},"name":{"description":"Name of the MCP server","type":"string"},"type":{"description":"Type of the MCP server","enum":["url"],"type":"string"},"url":{"description":"URL of the MCP server","type":"string"}},"required":["name","url","type"],"type":"object"},"type":"array"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"model":{"order":0,"name":"Model","description":"The model that will complete your prompt.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"prompt":{"order":1,"name":"Prompt","description":"The input to the model.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"schema":{"order":4,"name":"Schema","description":"The JSON schema to generate the object from.","type":{"additionalProperties":true,"type":"object"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"systemPrompt":{"order":2,"name":"System prompt","description":"A system prompt is a way of providing context and instructions to Claude, such as specifying a particular goal or role.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"temperature":{"order":11,"name":"Temperature","description":"Amount of randomness injected into the response. Defaults to `1.0`. Ranges from `0.0` to `1.0`. Use temperature closer to `0.0` for analytical / multiple choice, and closer to `1.0` for creative and generative tasks. Note that even with temperature of `0.0`, the results will not be fully deterministic.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinking":{"order":6,"name":"Thinking","description":"Whether to enable Claude''s extended thinking. This will make the model think more deeply and generate more detailed responses. This will also increase the cost of the request.","type":{"type":"boolean"},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinkingBudget":{"order":7,"name":"Thinking budget","description":"Determines how many tokens Claude can use for its internal reasoning process. Must be ≥1024 and less than `max_tokens`.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"toolDefinitions":{"order":8,"name":"Tools","description":"Array of tool blocks to use","type":{"items":{"properties":{"blockId":{"description":"ID of the tool definition block","type":"string"},"description":{"description":"Description of the tool","type":"string"},"name":{"description":"Name of the tool","type":"string"},"schema":{"description":"Schema of the tool","type":"object"}},"required":["name","description","schema"],"type":"object"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"result":{"order":0,"name":"Result","description":"The generated message","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"object":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"description":"The generated object if schema is provided"},"text":{"description":"The generated message","type":"string"},"usage":{"properties":{"inputTokens":{"type":"number"},"outputTokens":{"type":"number"}},"type":"object"}},"required":["usage"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":true}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1360, 385]
    inputs:
      default:
        config:
          force: false
          maxTokens: 10000
          model: claude-sonnet-4-20250514
          prompt: check weather for gdansk and stock price for NVDA
          thinking: false
          thinkingBudget: 1024
          toolDefinitions: !expr |-
            [
              ref("signal.getStockPrice.definition"),
              ref("signal.getWeatherForCity.definition")
            ]
  - name: Sequential tool calls demo
    type:
      appBlock:
        block: generateMessage
        appInstallation: anthropic
        schema: '{"order":0,"name":"Generate message","category":"Core","description":"Generates a message based on provided input and parameters.","config":{},"hasOnInternalMessage":true,"inputs":{"default":{"order":0,"config":{"force":{"order":10,"name":"Force","description":"Force the model to call a tool. Provide a name to call a specific tool or `true` to always call any tool.","type":{"anyOf":[{"description":"The name of the tool to call.","type":"string"},{"description":"Always call any tool.","type":"boolean"}]},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxRetries":{"order":5,"name":"Max retries","description":"The number of times to retry the call if it fails to generate a valid object. Works only if schema is provided.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxTokens":{"order":3,"name":"Max tokens","description":"The maximum number of tokens to generate before stopping. Note that the models may stop before reaching this maximum. This parameter only specifies the absolute maximum number of tokens to generate.","type":{"type":"number"},"fixed":false,"required":false,"default":1024,"hasValidator":false,"fieldKey":"","sensitive":false},"mcpServers":{"order":9,"name":"Remote MCP servers","description":"Array of remote MCP servers to use","type":{"items":{"properties":{"allowedTools":{"description":"Allowed tools for the MCP server","type":"array"},"authorizationToken":{"description":"Authorization token for the MCP server","type":"string"},"name":{"description":"Name of the MCP server","type":"string"},"type":{"description":"Type of the MCP server","enum":["url"],"type":"string"},"url":{"description":"URL of the MCP server","type":"string"}},"required":["name","url","type"],"type":"object"},"type":"array"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"model":{"order":0,"name":"Model","description":"The model that will complete your prompt.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"prompt":{"order":1,"name":"Prompt","description":"The input to the model.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"schema":{"order":4,"name":"Schema","description":"The JSON schema to generate the object from.","type":{"additionalProperties":true,"type":"object"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"systemPrompt":{"order":2,"name":"System prompt","description":"A system prompt is a way of providing context and instructions to Claude, such as specifying a particular goal or role.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"temperature":{"order":11,"name":"Temperature","description":"Amount of randomness injected into the response. Defaults to `1.0`. Ranges from `0.0` to `1.0`. Use temperature closer to `0.0` for analytical / multiple choice, and closer to `1.0` for creative and generative tasks. Note that even with temperature of `0.0`, the results will not be fully deterministic.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinking":{"order":6,"name":"Thinking","description":"Whether to enable Claude''s extended thinking. This will make the model think more deeply and generate more detailed responses. This will also increase the cost of the request.","type":{"type":"boolean"},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinkingBudget":{"order":7,"name":"Thinking budget","description":"Determines how many tokens Claude can use for its internal reasoning process. Must be ≥1024 and less than `max_tokens`.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"toolDefinitions":{"order":8,"name":"Tools","description":"Array of tool blocks to use","type":{"items":{"properties":{"blockId":{"description":"ID of the tool definition block","type":"string"},"description":{"description":"Description of the tool","type":"string"},"name":{"description":"Name of the tool","type":"string"},"schema":{"description":"Schema of the tool","type":"object"}},"required":["name","description","schema"],"type":"object"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"result":{"order":0,"name":"Result","description":"The generated message","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"object":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"description":"The generated object if schema is provided"},"text":{"description":"The generated message","type":"string"},"usage":{"properties":{"inputTokens":{"type":"number"},"outputTokens":{"type":"number"}},"type":"object"}},"required":["usage"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":true}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1360, 626]
    inputs:
      default:
        config:
          force: false
          maxTokens: 10000
          model: claude-sonnet-4-20250514
          prompt: first check weather for gdansk and after that check stock price for NVDA
          thinking: false
          thinkingBudget: 1024
          toolDefinitions: !expr |-
            [
              ref("signal.getStockPrice.definition"),
              ref("signal.getWeatherForCity.definition")
            ]
  - name: Sleep (1)
    type:
      coreBlock: sleep
    position: [483, 553]
    inputs:
      default:
        links:
          - block: Get stock price
            output: onCall
        config:
          sleep: 2
  - name: Everything
    description: a tool call + mcp server + structured output
    type:
      appBlock:
        block: generateMessage
        appInstallation: anthropic
        schema: '{"order":0,"name":"Generate message","category":"Core","description":"Generates a message based on provided input and parameters.","config":{},"hasOnInternalMessage":true,"inputs":{"default":{"order":0,"config":{"force":{"order":10,"name":"Force","description":"Force the model to call a tool. Provide a name to call a specific tool or `true` to always call any tool.","type":{"anyOf":[{"description":"The name of the tool to call.","type":"string"},{"description":"Always call any tool.","type":"boolean"}]},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxRetries":{"order":5,"name":"Max retries","description":"The number of times to retry the call if it fails to generate a valid object. Works only if schema is provided.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxTokens":{"order":3,"name":"Max tokens","description":"The maximum number of tokens to generate before stopping. Note that the models may stop before reaching this maximum. This parameter only specifies the absolute maximum number of tokens to generate.","type":{"type":"number"},"fixed":false,"required":false,"default":1024,"hasValidator":false,"fieldKey":"","sensitive":false},"mcpServers":{"order":9,"name":"Remote MCP servers","description":"Array of remote MCP servers to use","type":{"items":{"properties":{"allowedTools":{"description":"Allowed tools for the MCP server","type":"array"},"authorizationToken":{"description":"Authorization token for the MCP server","type":"string"},"name":{"description":"Name of the MCP server","type":"string"},"type":{"description":"Type of the MCP server","enum":["url"],"type":"string"},"url":{"description":"URL of the MCP server","type":"string"}},"required":["name","url","type"],"type":"object"},"type":"array"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"model":{"order":0,"name":"Model","description":"The model that will complete your prompt.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"prompt":{"order":1,"name":"Prompt","description":"The input to the model.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"schema":{"order":4,"name":"Schema","description":"The JSON schema to generate the object from.","type":{"additionalProperties":true,"type":"object"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"systemPrompt":{"order":2,"name":"System prompt","description":"A system prompt is a way of providing context and instructions to Claude, such as specifying a particular goal or role.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"temperature":{"order":11,"name":"Temperature","description":"Amount of randomness injected into the response. Defaults to `1.0`. Ranges from `0.0` to `1.0`. Use temperature closer to `0.0` for analytical / multiple choice, and closer to `1.0` for creative and generative tasks. Note that even with temperature of `0.0`, the results will not be fully deterministic.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinking":{"order":6,"name":"Thinking","description":"Whether to enable Claude''s extended thinking. This will make the model think more deeply and generate more detailed responses. This will also increase the cost of the request.","type":{"type":"boolean"},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinkingBudget":{"order":7,"name":"Thinking budget","description":"Determines how many tokens Claude can use for its internal reasoning process. Must be ≥1024 and less than `max_tokens`.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"toolDefinitions":{"order":8,"name":"Tools","description":"Array of tool blocks to use","type":{"items":{"properties":{"blockId":{"description":"ID of the tool definition block","type":"string"},"description":{"description":"Description of the tool","type":"string"},"name":{"description":"Name of the tool","type":"string"},"schema":{"description":"Schema of the tool","type":"object"}},"required":["name","description","schema"],"type":"object"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"result":{"order":0,"name":"Result","description":"The generated message","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"object":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"description":"The generated object if schema is provided"},"text":{"description":"The generated message","type":"string"},"usage":{"properties":{"inputTokens":{"type":"number"},"outputTokens":{"type":"number"}},"type":"object"}},"required":["usage"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":true}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1703, 646]
    inputs:
      default:
        config:
          force: false
          maxTokens: 10000
          mcpServers: !expr |-
            [ref("signal.opentofuMcpServer.definition")]
          model: claude-sonnet-4-20250514
          prompt: check weather for gdansk and find more about blueprint resource in spacelift provider
          schema: !expr |-
            {
              type: "object",
              properties: {
                weather: {
                  type: "string",
                },
                description: {
                  type: "string"
                }
              },
              required: ["weather", "description"]
            }
          thinking: false
          thinkingBudget: 1024
          toolDefinitions: !expr |-
            [
              ref("signal.getStockPrice.definition"),
              ref("signal.getWeatherForCity.definition")
            ]
  - name: Parallel tool calls with thinking demo
    type:
      appBlock:
        block: generateMessage
        appInstallation: anthropic
        schema: '{"order":0,"name":"Generate message","category":"Core","description":"Generates a message based on provided input and parameters.","config":{},"hasOnInternalMessage":true,"inputs":{"default":{"order":0,"config":{"force":{"order":10,"name":"Force","description":"Force the model to call a tool. Provide a name to call a specific tool or `true` to always call any tool.","type":{"anyOf":[{"description":"The name of the tool to call.","type":"string"},{"description":"Always call any tool.","type":"boolean"}]},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxRetries":{"order":5,"name":"Max retries","description":"The number of times to retry the call if it fails to generate a valid object. Works only if schema is provided.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"maxTokens":{"order":3,"name":"Max tokens","description":"The maximum number of tokens to generate before stopping. Note that the models may stop before reaching this maximum. This parameter only specifies the absolute maximum number of tokens to generate.","type":{"type":"number"},"fixed":false,"required":false,"default":1024,"hasValidator":false,"fieldKey":"","sensitive":false},"mcpServers":{"order":9,"name":"Remote MCP servers","description":"Array of remote MCP servers to use","type":{"items":{"properties":{"allowedTools":{"description":"Allowed tools for the MCP server","type":"array"},"authorizationToken":{"description":"Authorization token for the MCP server","type":"string"},"name":{"description":"Name of the MCP server","type":"string"},"type":{"description":"Type of the MCP server","enum":["url"],"type":"string"},"url":{"description":"URL of the MCP server","type":"string"}},"required":["name","url","type"],"type":"object"},"type":"array"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"model":{"order":0,"name":"Model","description":"The model that will complete your prompt.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"prompt":{"order":1,"name":"Prompt","description":"The input to the model.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"schema":{"order":4,"name":"Schema","description":"The JSON schema to generate the object from.","type":{"additionalProperties":true,"type":"object"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"systemPrompt":{"order":2,"name":"System prompt","description":"A system prompt is a way of providing context and instructions to Claude, such as specifying a particular goal or role.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"temperature":{"order":11,"name":"Temperature","description":"Amount of randomness injected into the response. Defaults to `1.0`. Ranges from `0.0` to `1.0`. Use temperature closer to `0.0` for analytical / multiple choice, and closer to `1.0` for creative and generative tasks. Note that even with temperature of `0.0`, the results will not be fully deterministic.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinking":{"order":6,"name":"Thinking","description":"Whether to enable Claude''s extended thinking. This will make the model think more deeply and generate more detailed responses. This will also increase the cost of the request.","type":{"type":"boolean"},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"thinkingBudget":{"order":7,"name":"Thinking budget","description":"Determines how many tokens Claude can use for its internal reasoning process. Must be ≥1024 and less than `max_tokens`.","type":{"type":"number"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"toolDefinitions":{"order":8,"name":"Tools","description":"Array of tool blocks to use","type":{"items":{"properties":{"blockId":{"description":"ID of the tool definition block","type":"string"},"description":{"description":"Description of the tool","type":"string"},"name":{"description":"Name of the tool","type":"string"},"schema":{"description":"Schema of the tool","type":"object"}},"required":["name","description","schema"],"type":"object"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"result":{"order":0,"name":"Result","description":"The generated message","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"object":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"description":"The generated object if schema is provided"},"text":{"description":"The generated message","type":"string"},"usage":{"properties":{"inputTokens":{"type":"number"},"outputTokens":{"type":"number"}},"type":"object"}},"required":["usage"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":true}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1360, 498]
    inputs:
      default:
        config:
          force: false
          maxTokens: 10000
          model: claude-sonnet-4-20250514
          prompt: check weather for gdansk and stock price for NVDA
          thinking: true
          thinkingBudget: 1024
          toolDefinitions: !expr |-
            [
              ref("signal.getStockPrice.definition"),
              ref("signal.getWeatherForCity.definition")
            ]
